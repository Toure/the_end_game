/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        toggle-bt0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <39 38 10 39>;
        };

        toggle-bt3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <38 39 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R     &kp T           &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp MINUS  &kp A  &kp S  &kp D  &kp F     &kp G           &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V     &kp B           &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &mo 2  &kp LGUI  &kp LEFT_ALT    &kp SPACE  &mo 1  &kp SQT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE        &kp N1  &kp N2      &kp N3             &kp N4        &kp N5              &kp N6     &kp N7         &kp N8            &kp N9     &kp N0  &kp DELETE
&trans            &trans  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_PLAY_PAUSE    &kp LEFT   &kp DOWN       &kp UP            &kp RIGHT  &trans  &kp ENTER
&kp LEFT_CONTROL  &trans  &trans      &trans             &trans        &trans              &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP       &kp END    &trans  &kp RIGHT_SHIFT
                                      &tog 3             &kp LEFT_GUI  &kp LEFT_ALT        &kp SPACE  &trans         &kp SINGLE_QUOTE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &trans         &trans         &kp RG(LS(T))    &kp CARET  &kp AMPS   &kp LPAR   &kp RPAR  &kp PIPE       &kp TILDE
&trans     &kp LC(NUMBER_1)    &kp LC(NUMBER_2)     &kp RC(N3)     &trans         &trans           &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &trans         &trans
&kp LCTRL  &kp LS(LCTRL)       &kp LS(LC(X))        &kp LS(LC(C))  &kp LS(RC(V))  &trans           &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp BACKSLASH  &kp RIGHT_SHIFT
                                                    &trans         &kp LGUI       &kp LEFT_ALT     &kp SPACE  &trans     &kp GRAVE
            >;
        };

        layer_3 {
            bindings = <
&kp F1          &kp F2          &kp F3          &kp F4          &kp F5        &kp F6          &kp F7       &kp F8      &trans  &trans  &trans  &trans
&kp LA(LC(F1))  &kp LA(LC(F2))  &kp LA(LC(F3))  &kp LA(LC(F4))  &trans        &trans          &trans       &trans      &trans  &trans  &trans  &trans
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &trans       &trans      &trans  &trans  &trans  &trans
                                                &to 0           &sys_reset    &bootloader     &bootloader  &sys_reset  &trans
            >;
        };
    };
};
